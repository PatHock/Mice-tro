version '0.1'


apply plugin: 'java'
sourceCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "gradle.plugin.org.akhikhl.gretty:gretty:2.0.0"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
    }
}

repositories {
    mavenCentral()
}


//apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'war'
apply plugin: "org.akhikhl.gretty"
apply plugin: "jacoco" // for unit test code coverage reports
apply plugin: "io.spring.dependency-management" // for AWS SDK


dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.228'
    }
}

dependencies {
    compile 'com.amazonaws:aws-java-sdk-s3'
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    )
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
}

war {
    webXml = file('src/main/webapp/WEB-INF/web.xml')
}


jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/JacocoCodeCoverageReports")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

//check.dependsOn jacocoTestReport

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.7
            }
        }
    }
}

// A workaround for a bug with gretty.
// https://github.com/akhikhl/gretty/issues/425
gretty {
    jacocoEnabled false
    httpPort = 8082
    httpsPort = 8091
    contextPath = '/'
    servletContainer = 'tomcat8'
}

test {
    useJUnitPlatform()
}