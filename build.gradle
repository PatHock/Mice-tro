version '0.1'

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
    }
}

repositories {
    mavenCentral()
}

//apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'war'
apply plugin: "jacoco" // for unit test code coverage reports
apply plugin: "io.spring.dependency-management" // for AWS SDK
apply plugin: 'com.bmuschko.tomcat'
//apply plugin: 'org.springframework.boot'

// The last straw for Gretty
// https://github.com/akhikhl/gretty/issues/306

sourceSets {
    main {
        java {
            srcDir 'src/main/java/'
            exclude '**/spring/**'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
    }
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.228'
    }
}



dependencies {

    def tomcatVersion = '8.5.16'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.5.2",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

    implementation(
            'com.amazonaws:aws-java-sdk-s3'
    )
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0',
            'org.mockito:mockito-core:2.7.19'

    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    )
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
}

war {
    manifest {
        attributes(
                "Class-Path": configurations.runtimeClasspath.files.collect { it.getName() }.join(' '))
    }
}

jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/JacocoCodeCoverageReports")}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.7
            }
        }
    }
}

tomcat {
    httpPort = 8082
    httpsPort = 8091
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
}


test {
    useJUnitPlatform()
}

